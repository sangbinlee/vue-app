vue project 사전 준비
	1. nodejs 설치 : https://nodejs.org/en/download/
	2. nodejs 설치 확인 : npm -v 
	3. vue/cli 설치 : npm i -g @vue/cli
	4. vue/cli 설치 확인 : vue --version


vue 프로젝트 루트 정하기 : c:\front-office
	1. window + R (실행 ) : cmd 입력 후 엔터
	2. cd/ && mkdir front-office && cd front-office

vue 프로젝트 생성 
1. 프로젝트 생성 : vue create vue-app
	Vue CLI v5.0.4
	? Please pick a preset: Default ([Vue 3] babel, eslint)
	? Pick the package manager to use when installing dependencies: Yarn
2. 프로젝트 생성 완료 시 터미널 내용 : 

	📄  Generating README.md...

	🎉  Successfully created project vue-app.
	👉  Get started with the following commands:

	 $ cd vue-app
	 $ yarn serve
	 

개발 툴 설치 
1. 개발 툴 다운로드 : https://code.visualstudio.com/	 
2. vscode 실행 : cd vue-app && code .
3. vscode 터미널 열기 : ctrl + shift + ~ 

vue 프로젝트 실행
1. vue 프로젝트 실행 : yarn serve
2. vue 프로젝트 실행 완료시  터미널 내용

	C:\job\front-end\vuejs\vue-app>yarn serve
	yarn run v1.22.18
	$ vue-cli-service serve
	INFO  Starting development server...


	DONE  Compiled successfully in 3601ms                                                                                                                      오후 9:29:55


	App running at:
	- Local:   http://localhost:8080/
	- Network: http://192.168.0.46:8080/

	Note that the development build is not optimized.
	To create a production build, run yarn build.



3. 크롬 브라우저 로 확인 : 위 링크를 ctrl + 클릭
	http://localhost:8080/
	http://192.168.0.46:8080/



vue 프로젝트 배포용 빌드
1. vue 프로젝트 배포용 빌드 : yarn build
1. vue 프로젝트 배포용 빌드 완료시 터미널 내용

	C:\job\front-end\vuejs\vue-app>yarn build
	yarn run v1.22.18
	$ vue-cli-service build
	All browser targets in the browserslist configuration have supported ES module.
	Therefore we don't build two separate bundles for differential loading.


	⠋  Building for production...

	DONE  Compiled successfully in 6548ms                                                                                                                      오후 9:44:26

	File                                 Size                                                           Gzipped

	dist\js\chunk-vendors.228a6286.js    75.39 KiB                                                      28.10 KiB
	dist\js\app.03ad958e.js              13.05 KiB                                                      8.41 KiB
	dist\css\app.2cf79ad6.css            0.33 KiB                                                       0.23 KiB

	Images and other types of assets omitted.
	Build at: 2022-05-11T12:44:26.064Z - Hash: 41c277f4be838900 - Time: 6548ms

	DONE  Build complete. The dist directory is ready to be deployed.
	INFO  Check out deployment instructions at https://cli.vuejs.org/guide/deployment.html

	Done in 8.46s.

vue 프로젝트 배포 가이드 문서 
	https://cli.vuejs.org/guide/deployment.html



라우터 설치 
	npm i --save vue-router
	npm i vue-router@next
		https://www.vuemastery.com/blog/vue-router-a-tutorial-for-vue-3/


axios 사용해서 데이터를 가져오자
	axios 설치 : npm i --save axios

json server 설치, 실행, 사용
1. json server 설치 : npm install json-server -g 	
2. json server 실행 : json-server data.json
C:\job\front-end\vuejs\vue-app\src\data>json-server data.json

	\{^_^}/ hi!

	Loading data.json
	Done

	Resources
	http://localhost:3000/items

	Home
	http://localhost:3000

3. json server	데이터 확인 : http://localhost:3000/items



express server 로 데이터 처리 해 보기
1. 설치 : npm install express-generator -g
2. express server project 생성하기 : express express-server

	C:\job\front-end\vuejs\vue-app>express express-server

	warning: the default view engine will not be jade in future releases
	warning: use `--view=jade' or `--help' for additional options       


	create : express-server\
	create : express-server\public\
	create : express-server\public\javascripts\
	create : express-server\public\images\
	create : express-server\public\stylesheets\
	create : express-server\public\stylesheets\style.css
	create : express-server\routes\
	create : express-server\routes\index.js
	create : express-server\routes\users.js
	create : express-server\views\
	create : express-server\views\error.jade
	create : express-server\views\index.jade
	create : express-server\views\layout.jade
	create : express-server\app.js
	create : express-server\package.json
	create : express-server\bin\
	create : express-server\bin\www

	change directory:
		> cd express-server

	install dependencies:
		> npm install

	run the app:
		> SET DEBUG=express-server:* & npm start


3. express server project 세팅 : C:\job\front-end\vuejs\vue-app>cd express-server && npm install		
4. express server 시작 : SET DEBUG=express-server:* & npm start
	http://localhost:3000/


express server project 소수 수정시 재시작 안하게 처리 모듈 설치
1. 설치	: npm i --save-dev nodemon	
2. 설정 : package.json 의 scripts 에     ,"dev": "nodemon ./bin/www" 추가
3. 서버 실행 : npm run dev
4. api 확인 : http://localhost:3000/api/board

mysql 모듈 설치 
1. npm i --save mysql
  express-server:server Listening on port 3000 +0ms
2. error - mysql connect error Error: ER_NOT_SUPPORTED_AUTH_MODE: Client does not support authentication protocol requested by server; consider upgrading MySQL client
2. root/	MySQLRootPassword:1!

	ALTER USER 'springuser'@'localhost' IDENTIFIED WITH mysql_native_password BY 'ThePassword';
	select host, user, plugin, authentication_string from mysql.user; 


3. http://localhost:3000/api/board




도메인간 교차통신허용)
0. error : Access to XMLHttpRequest at 'http://localhost:3000/api/board' from origin 'http://localhost:8080' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
1. cors 모듈 설치 : npm i --save cors
2. express server 설정 : app.js
	var cors = require('cors'); //교차통신 모듈 호출
	app.use(cors())//교차통신 적용



VUE PROJECT 에서 API 호출 화면 테스트
1. http://localhost:8080/board/list	